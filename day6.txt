    1  vim .bashrc 
    2  source .bashrc 
    3  swapoff -a
    4  lsmod | grep br_netfilter 
    5  sudo modprobe br_netfilter
    6  lsmod | grep br_netfilter 
    7  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
    8  net.bridge.bridge-nf-call-ip6tables = 1
    9  net.bridge.bridge-nf-call-iptables = 1
   10  EOF
   11  sysctl --system
   12  apt-get update -y
   13  apt-get install -y  apt-transport-https ca-certificates curl software-properties-common gnupg2
   14  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   15  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   16       $(lsb_release -cs) \
   17       stable"
   18  apt-get update && sudo apt-get install -y   containerd.io   docker-ce   docker-ce-cli
   19  cat <<EOF | sudo tee /etc/docker/daemon.json
   20  {
   21    "exec-opts": ["native.cgroupdriver=systemd"],
   22    "log-driver": "json-file",
   23    "log-opts": {
   24      "max-size": "100m"
   25    },
   26    "storage-driver": "overlay2"
   27  }
   28  EOF
   29  mkdir -p /etc/systemd/system/docker.service.d
   30  systemctl daemon-reload
   31  systemctl enable docker
   32  systemctl restart docker
   33  systemctl status docker
   34  apt-get update && sudo apt-get install -y apt-transport-https curl
   35  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
   36  cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
   37  deb https://apt.kubernetes.io/ kubernetes-xenial main
   38  EOF
   39  apt-get update -y
   40  apt-get install -y kubelet kubeadm kubectl
   41  apt-mark hold kubelet kubeadm kubectl
   42  systemctl daemon-reload
   43  systemctl enable kubelet
   44  systemctl restart kubelet
   45  systemctl status kubelet
   46  rm /etc/containerd/config.toml
   47  systemctl restart containerd
   48  kubeadm init
   49  kubectl get nodes
   50  kubeadm token create --print-join-command
   51  mkdir -p $HOME/.kube
   52  cp -i /etc/kubernetes/admin.conf  $HOME/.kube/config
   53  chown $(id -u):$(id -g) $HOME/.kube/config
   54  kubectl get nodes
   55  kubeadm token create --print-join-command
   56  kubectl get nodes
   57  kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
   58  kubectl get nodes
   59  kubectl get nodes -o wide
   60  kubectl get nodes
   61  vim /etc/kubernetes/admin.conf 
   62  ls $HOME
   63  ls -la $HOME
   64  pwd
   65  ls .kube/
   66  cat .kube/config 
   67  history 
   68  kubectl get pods -n kube-system
   69  kubectl get pods -n kube-system -o wide
   70  kubectl get nodes
   71  kubectl get pods
   72  kubectl get pods -n kube-system
   73  kubectl get pods -A
   74  kubectl  get  pods
   75  kubectl  run  --generator=run-pod/v1 nginx-pod --image=nginx
   76  kubectl  run  --help
   77  kubectl  run  --generator=run-pod/v1 nginx-pod --image=nginx
   78  kubectl  run   nginx-pod --image=nginx
   79  kubectl get pods
   80  kubectl get pods -o wide
   81  kubectl get nodes
   82  kubectl  run   nginx2-pod --image=nginx
   83  kubectl get pods -o wide
   84  kubectl get pods -A
   85  kubectl get pods -n default
   86  ls
   87  ls -a
   88  vim  nginx-pod.yaml
   89  ls
   90  kubectl get pods
   91  kubectl apply -f nginx-pod.yaml
   92  kubectl get pods
   93  kubectl get pods -o wide
   94  cat nginx-pod.yaml 
   95  kubectl get pods -n default
   96  vim web-nginx.yaml
   97  kubectl apply -f web-nginx.yaml 
   98  kubectl get pods
   99  kubectl delete pod nginx-deployment-cbdccf466-9pl6f
  100  kubectl get pods
  101  kubectl get pods -o wide
  102  kubectl get pods -o json | more
  103  kubectl get pods 
  104  kubectl get pods  nginx-file-pod -o json
  105  kubectl get pods  nginx-file-pod -o yaml
  106  kubectl describe nginx-file-pod 
  107  kubectl describe pod nginx-file-pod 
  108  kubectl get pods
  109  kubectl edit pod nginx-deployment
  110  kubectl get pods
  111  kubectl edit pod nginx-deployment-cbdccf466-g97tb
  112  kubectl describe  pod nginx-deployment-cbdccf466-g97tb
  113  kubectl get pods
  114  kubectl edit pod nginx-pod
  115  kubectl logs pod nginx-pod
  116  kubectl logs  nginx-pod
  117  history 
  118  ls
  119  cat nginx-pod.yaml 
  120  ls
  121  cat web-nginx.yaml 
  122  vim .profile
  123  source .profile
  124  kubeadm version
  125  apt list --upgradable
  126  kubectl get pods
  127  kubectl get pods | kubectl delete pods
  128  kubectl get pods | kubectl delete pods -
  129  kubectl delete pods nginx-deployment-cbdccf466-87nlx nginx-deployment-cbdccf466-g97tb nginx-deployment-cbdccf466-m2z7r nginx-deployment-cbdccf466-tp4jq nginx-file-pod nginx-pod nginx2-pod
  130  kubectl get pods
  131  useradd jeetu
  132  passwd jeetu
  133  visudo 
  134  kubectl get pods
  135  kubectl get all
  136  kubectl delete rs nginx-deployment-cbdccf466 --force
  137  kubectl delete deployment nginx-deployment
  138  kubectl delete deployment nginx-deployment --force
  139  kubectl get all
  140  kubectl delete pods -A
  141  kubectl delete pods nginx-deployment-cbdccf466-g97tb nginx-deployment-cbdccf466-tp4jq nginx-file-pod nginx-pod  nginx2-pod
  142  exit
  143  cat .profile 
  144  kubectl get pods
  145  kubectl get all
  146  ls
  147  cat nginx-pod.yaml 
  148  ls
  149  kubectl apply -f nginx-pod.yaml 
  150  kubectl get pods
  151  kubectl get pods -o wide
  152  kubectl get all
  153  kubectl get pods
  154  kubectl describe nginx-file-pod
  155  kubectl describe pod  nginx-file-pod
  156  cat nginx-pod.yaml 
  157  vim nginx-pod.yaml 
  158  kubectl delete pod nginx-file-pod
  159  kubectl apply -f nginx-pod.yaml 
  160  kubectl get pod
  161  kubectl describe pod nginx-file-pod
  162  kubectl edit pod nginx-file-pod
  163  kubectl describe pod nginx-file-pod
  164  ls
  165  vim replica1.yaml
  166  kubectl get all
  167  kubectl apply -f replica1.yaml 
  168  vim replica1.yaml 
  169  kubectl apply -f replica1.yaml 
  170  vim replica1.yaml 
  171  vim /etc/vim/vimrc
  172  vim replica1.yaml 
  173  kubectl apply -f replica1.yaml 
  174  vim replica1.yaml 
  175  kubectl apply -f replica1.yaml 
  176  vim replica1.yaml 
  177  >replica1.yaml 
  178  vim replica1.yaml 
  179  kubectl apply -f replica1.yaml 
  180  cat replica1.yaml 
  181  kubectl get all
  182  cat replica1.yaml 
  183  kubectl get pods
  184  kubectl delete pod my-replicaset-4w82s
  185  kubectl get pods
  186  kubectl delete pod my-replicaset-xkccx
  187  kubectl get pods
  188  kubectl get all
  189  kubectl edit replicaset my-replicaset
  190  kubectl get all
  191  kubectl get pods
  192  kubectl scale replicaset my-replicaset --replicas=2
  193  kubectl get pods
  194  kubectl scale replicaset my-replicaset --replicas=7
  195  kubectl get pods
  196  vim replica1.yaml 
  197  kubectl get pods -o wide
  198  kubectl scale replicaset my-replicaset --replicas=2
  199  kubectl get all
  200  kubectl delete rs my-replicaset-8ppvr my-replicaset-j7xtd
  201  kubectl delete pods my-replicaset-8ppvr my-replicaset-j7xtd
  202  kubectl get all
  203  kubectl scale replicaset my-replicaset --replicas=1
  204  kubectl get all
  205  kubectl delete rs my-replicaset --force
  206  kubectl get all
  207  history 
  208  kubectl apply -f replica1.yaml 
  209  kubectl get all
  210  kubectl describe rs  my-replicaset
  211  kubectl describe rs  my-replicaset -l [app=my-app]
  212  kubectl describe rs  my-replicaset -l app=my-app
  213  kubectl describe rs  my-replicaset -l app
  214  kubectl describe rs  my-replicaset 
  215  kubectl describe rs  my-replicaset -l [my-container:]
  216  kubectl describe rs  my-replicaset  -l [app=my-app]
  217  kubectl describe rs  -l [app=my-app]
  218  kubectl get rs -l [app=my-app]
  219  kubectl get rs 
  220  kubectl get rs -o wide
  221  kubectl get rs 
  222  kubectl describe rs my-replicaset
  223  kubectl get pods -l [app=myapp]
  224  kubectl get pods -l app
  225  kubectl delete pod nginx-file-pod
  226  kubectl get pods -l app
  227  kubectl get rs my-replicaset
  228  kubectl get rs my-replicaset -o wide
  229  kubectl describe rs my-replicaset 
  230  kubectl get rs my-replicaset 
  231  kubectl get rs -l [app]
  232  kubectl get rs -l [app=myapp]
  233  kubectl get rs -l app=myapp
  234  kubectl get rs -l app
  235  kubectl get all
  236  kubectl delete rs my-replicaset
  237  kubectl get all
  238  history 
  239  kubectl get namespaces
  240  kubectl create namespace dev
  241  kubectl get namespaces
  242  vim namespace.yaml
  243  kubectl apply -f namespace.yaml 
  244  kubectl get namespaces
  245  cat namespace.yaml 
  246  kubectl run nginx --image=nginx:1.16 --namespace=dev1
  247  kubectl run nginx --image=nginx:1.16 --namespace=dev
  248  kubectl get pods
  249  kubectl get pods -n dev
  250  kubectl get pods -n production
  251  kubectl run nginx --image=nginx:1.17 --namespace=production
  252  kubectl get pods -n production
  253  vim res-in-my-ns.yaml
  254  kubectl apply -f res-in-my-ns.yaml 
  255  kubectl get pods
  256  kubectl get pods -n dev
  257  kubectl get all
  258  kubectl get all -n dev
  259  vim 2res.yaml
  260  kubectl apply -f 2res.yaml 
  261  kubectl get all -n dev
  262  kubectl delete rs nginx-app-6d54969498
  263  kubectl delete rs nginx-app-6d54969498 -n dev --force
  264  kubectl get all -n dev
  265  kubectl delete deployment nginx-app --force
  266  kubectl delete deployment nginx-app --force -n dev
  267  kubectl get all -n dev
  268  kubectl delete pod nginx -n dev
  269  kubectl get all -n dev
  270  kubectl get all
  271  kubectl delete service nginx-service --force
  272  kubectl get all
  273  kubectl get all -n dev
  274  vim 2res.yaml 
  275  kubectl apply -f 2res.yaml 
  276  kubectl get all -n dev
  277  kubectl get all -n default
  278  vim 2res.yaml 
  279  kubectl apply -f 2res.yaml 
  280  kubectl get all -n production
  281  vim 2res.yaml 
  282  kubectl get all
  283  kubectl get all -n dev
  284  kubectl get all -n dev -o wide
  285  kubectl describe pod nginx-app-74d6bfc7-wdq6r | less
  286  kubectl describe pod nginx-app-74d6bfc7-wdq6r -n dev | less
  287  kubectl delete pod nginx-app-74d6bfc7-wdq6r -n dev
  288  kubectl get all -n dev -o wide
  289  kubectl describe pod nginx-app-74d6bfc7-bscbs -n dev | less
  290  kubectl get pods -n dev
  291  kubectl edit pod nginx-app-74d6bfc7-bscbs -n dev
  292  kubectl get pod nginx-app-74d6bfc7-bscbs 
  293  kubectl get pod nginx-app-74d6bfc7-bscbs -n dev
  294  kubectl describe pod nginx-app-74d6bfc7-bscbs -n dev 
  295  vim 2res.yaml 
  296  kubectl get all -n dev
  297  kubectl delete namespace dev
  298  kubectl get all -n dev
  299  kubectl get namespaces
  300  kubectl create namespace dev
  301  kubectl get namespaces
  302  kubectl get pods
  303  kubectl get pods -n dev
  304  kubectl config view | grep -i namespace
  305  kubectl config view | 
  306  kubectl config set-context -current --namespace=dev
  307  kubectl config set-context --current --namespace=dev
  308  kubectl config view | grep -i namespace
  309  kubectl config view 
  310  kubectl get all -n dev
  311  history 
  312  kubectl get all -n dev
  313  kubectl run nginx --image=nginx:1.17
  314  kubectl get all -n dev
  315  kubectl config set-context --current --namespace=default
  316  kubectl config view | grep -i namespace
  317  kubectl get all 
  318  kubectl run nginx --image=nginx:1.16
  319  kubectl get all 
  320  kubectl get ns
  321  kubectl delete ns dev production
  322  kubectl get ns
  323  kubeadm version
  324  etcdctl version
  325  ETCD_VER=v3.4.26
  326  # choose either URL
  327  GOOGLE_URL=https://storage.googleapis.com/etcd
  328  GITHUB_URL=https://github.com/etcd-io/etcd/releases/download
  329  DOWNLOAD_URL=${GOOGLE_URL}
  330  rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz
  331  rm -rf /tmp/etcd-download-test && mkdir -p /tmp/etcd-download-test
  332  curl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz
  333  tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1
  334  rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz
  335  /tmp/etcd-download-test/etcd --version
  336  /tmp/etcd-download-test/etcdctl version
  337  mv /tmp/etcd-download-test/etcdctl  /usr/bin/
  338  etcdctl version
  339  ETCD_VER=v3.4.26
  340  # choose either URL
  341  GOOGLE_URL=https://storage.googleapis.com/etcd
  342  GITHUB_URL=https://github.com/etcd-io/etcd/releases/download
  343  DOWNLOAD_URL=${GOOGLE_URL}
  344  rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz
  345  rm -rf /tmp/etcd-download-test && mkdir -p /tmp/etcd-download-test
  346  curl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz
  347  ls /tmp/
  348  ls /tmp/etcd-download-test/
  349  cd /tmp/
  350  gunzip  etcd-v3.4.26-linux-amd64.tar.gz 
  351  ls
  352  ls /usr/bin/
  353  cd
  354  history 
  355  history 
  356  etcdvctl version
  357  history 
  358  etcdctl version
  359  ls -l /usr/bin/ | grep etcdctl
  360  kubectl run nginx-pod --image=nginx
  361  kubectl get pods
  362  kubectl describe pod -n kube-system 
  363  kubectl get pod -n kube-system 
  364  kubectl describe pod etcd-kmaster -n kube-system 
  365  ls -l /opt/
  366  ls -l /var/lib/
  367  ls -l /var/lib/etcd/
  368  ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379   --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key   snapshot save /opt/snapshot.db
  369  ls -l /opt/
  370  ETCDCTL_API=3 etcdctl --write-out=table snapshot status /opt/snapshot.db 
  371  history 
  372  ETCDCTL_API=3 etcdctl --write-out=table snapshot status /opt/snapshot.db 
  373  kubectl get pods
  374  kubectl delete pod nginx-pod
  375  kubectl get pods
  376  ETCDCTL_API=3 etcdctl --data-dir=/var/lib/etcd-backup snapshot restore /opt/snapshot.db
  377  vim  /etc/kubernetes/manifests/etcd.yaml
  378  kubectl get pods
  379  ls -l /var/lib/etcd*
  380  ls -ld /var/lib/etcd*
  381  ls
  382  mkdir role
  383  cd role/
  384  pwd
  385  vim role.yaml
  386  kubectl api-resources
  387  kubectl api-resources | grep Role
  388  kubectl api-resources | grep -i replicaset
  389  kubectl api-resources
  390  kubectl create ns dev-ns
  391  kubectl get all -n dev-ns
  392  vim role.yaml 
  393  kubectl apply -f role.yaml 
  394  kubectl get all -n dev-ns
  395  kubectl get all
  396  vim rolebinding.yaml
  397  kubectl apply -f rolebinding.yaml 
  398  kubectl get all -n dev-ns
  399  kubectl get role
  400  kubectl get role -n dev-ns
  401  date
  402  kubectl get rolebinding -n dev-ns
  403  openssl genrsa -out appuser.key 2048 
  404  openssl req -new -key appuser.key -out appuser.csr -subj "/CN=appuser"
  405  openssl x509 -req -in appuser.csr \ 
  406  openssl x509 -req -in appuser.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out appuser.crt -days 300 
  407  kubectl config set-credentials appuser  --client-certificate=appuser.crt --client-key=appuser.key
  408  kubectl config set-context appuser-context --cluster=kubernetes --user=appuser 
  409  kubectl config view 
  410  kubectl get pods -n dev-ns 
  411  kubectl get pods -n dev-ns --user=appuser
  412  ls
  413  kubectl auth can-i get pods --user=appuser
  414  kubectl auth can-i get pods --user=appuser -n dev-ns
  415  kubectl auth can-i list pods --user=appuser -n dev-ns
  416  kubectl auth can-i delete pods --user=appuser -n dev-ns
  417  kubectl auth can-i update pods --user=appuser -n dev-ns
  418  kubectl auth can-i update pods --user=appuser
  419  kubectl auth can-i create pods --user=appuser -n dev-ns
  420  kubectl auth can-i watch pods --user=appuser -n dev-ns
  421  kunectl get config
  422  kubectl get config
  423  kubectl get hist
  424  history 
  425  kubectl config view
  426  kubectl config unset contexts.appuser-context
  427  kubectl config unset users.appuser
  428  kubectl config view
  429  ls
  430  kubectl get role -n dev-ns
  431  kubectl delete role pod-reader -n dev-ns
  432  kubectl get rolebinding -n dev-ns
  433  kubectl delete rolebinding -n dev-ns
  434  kubectl delete rolebinding read-pods -n dev-ns
  435  cd ..
  436  mkdir clusterrole
  437  cd clusterrole/
  438  ls
  439  ls ../
  440  ls
  441  kubectl create ns test1
  442  kubectl create ns test2
  443  kubectl create ns 
  444  kubectl get ns 
  445  kubectl get pods -n test1 --user=monitor
  446  kubectl get pods -n test1 --user=appmonitor
  447  useradd appmonitor
  448  kubectl get pods -n test1 --user=appmonitor
  449  kubectl get -A -n test1 --user=appmonitor
  450  kubectl get pods -A -n test1 --user=appmonitor
  451  openssl genrsa -out appmonitor.key 2048
  452  ls
  453  openssl req -new -key appmonitor.key -out appmonitor.csr -subj "/CN=appmonitor
  454  openssl req -new -key appmonitor.key -out appmonitor.csr -subj "/CN=appmonitor"
  455  ls
  456  openssl x509 -req -in appmonitor.csr \ 
  457  -CA /etc/kubernetes/pki/ca.crt \ 
  458  -CAkey /etc/kubernetes/pki/ca.key \ 
  459  -CAcreateserial \ 
  460  -out appmonitor.crt -days 300 
  461  openssl x509 -req -in appmonitor.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out appmonitor.crt -days 300
  462  kubectl config set-credentials appmonitor  --client-certificate=appmonitor.crt --client-key=appmonitor.key
  463  kubectl config set-context appmonitor-context --cluster=kubernetes --user=appmonitor 
  464  kubectl config view 
  465  kubectl get pods --user=appmonitor
  466  kubectl get pods --user=appmonitor -n test1
  467  kubectl get pods --user=appmonitor -n test2
  468  vim clusterrole.yaml
  469  kubectl apply -f clusterrole.yaml 
  470  kubectl get clusterrole
  471  vim clusterrolebinding.yaml 
  472  kubectl apply -f clusterrolebinding.yaml 
  473  kubectl get clusterrolebinding
  474  kubectl get pods --user=appmonitor
  475  kubectl get pods --user=appmonitor -n test1
  476  kubectl get pods -A --user=appmonitor
  477  kubectl get pods -A --user=appmonitor -n default
  478  kubectl describe clusterrole clusterrole-monitoring
  479  kubectl describe clusterrolebinding clusterrolebinding-monitoring
  480  cat clusterrolebinding.yaml 
  481  kubectl describe clusterrolebinding clusterrole-binding-monitoring
  482  kubectl auth can-i get pods -n kube-system --user=appmonitor
  483  kubectl auth can-i create pods -n kube-system --user=appmonitor
  484  kubectl auth can-i get pods -n test1 --user=appmonitor
  485  kubectl auth can-i get pods -n test2 --user=appmonitor
  486  kubectl auth can-i delete pods -n test2 --user=appmonitor
  487  kubectl delete clusterrole clusterrole-monitoring
  488  kubectl delete clusterrolebinding  clusterrole-binding-monitoring
  489  kubectl get clusterrolebinding  clusterrole-binding-monitoring
  490  kubectl get clusterrole clusterrole-monitoring
  491  history > day6.txt
